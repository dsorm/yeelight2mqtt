name: go-latest

on:
  push:
    tags: [ '*' ]
    branches: [ master ]
env:
  TAG: yeelight2mqtt-${{ github.ref }}-$(date +'%Y%m%d-%H%M%S')

jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23.0
          
      - name: Download dependencies
        run: go mod download

      - name: Test
        run: go test -v ./...

      - name: Cross build (gox)
        run: |
          wget https://github.com/dsorm/gox/releases/download/latest/gox_linux_amd64
          chmod +x gox_linux_amd64
          ./gox_linux_amd64 \
          -os="windows linux darwin freebsd" \
          -arch="amd64 arm64 arm ppc64 riscv64" \
          -ldflags="-w -s" -output="release/{{.Dir}}_{{.OS}}_{{.Arch}}" \
          --parallel=8
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          body: |
             $(cat changelog.md | sed '/^## /,$!d; /^## /{x;p;d}; /^## /p;d' | sed -e 's/^/  - /' | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/\\n/g')
          draft: false
          prerelease: false
          
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: yeelight2mqtt_release
          path: ./release
          
      - name: Attach Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./release
          asset_name: yeelight2mqtt_release
          asset_content_type: application/octet-stream
          release_id: ${{ steps.create_release.outputs.id }}
          
      - name: Create Latest Release
        id: create_latest_release
        if: startsWith(github.ref, 'refs/tags/latest')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest Release
          body: |
            $(cat changelog.md | sed '/^## /,$!d; /^## /{x;p;d}; /^## /p;d' | sed -e 's/^/  - /' | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/\\n/g')
          draft: false
          prerelease: false
          
      - name: Attach Assets to Latest Release
        if: startsWith(github.ref, 'refs/tags/latest')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./release
          asset_name: yeelight2mqtt_release
          asset_content_type: application/octet-stream
          release_id: ${{ steps.create_release.outputs.id }}
    
