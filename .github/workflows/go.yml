name: go-latest

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        os: [windows, linux, darwin, freebsd]
        arch: [amd64, arm64, arm, ppc64, riscv64]
        
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.0
          
      - name: Download dependencies
        run: go mod download

      - name: Prepare Release Variables
        id: vars
        uses: tendermint/starport/actions/release/vars@v0.18.6

      - name: Test
        run: go test -v ./...

      - name: Cross build (gox)
        run: |
          wget https://github.com/dsorm/gox/releases/download/latest/gox_linux_amd64
          chmod +x gox_linux_amd64
          os_list=($(/bin/echo "${{ matrix.os }}" | tr ',' ' '))
          arch_list=($(/bin/echo "${{ matrix.arch }}" | tr ',' ' '))
          os_opts=$(IFS=, ; echo "${os_list[*]}")
          arch_opts=$(IFS=, ; echo "${arch_list[*]}")
          ./gox_linux_amd64 -os="$os_opts" -arch="$arch_opts" -ldflags="-w -s" -output="release/{{.Dir}}_{{.OS}}_{{.Arch}}"

      - name: Delete the "latest" Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        if: ${{ steps.vars.outputs.is_release_type_latest == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          files: release/*
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
